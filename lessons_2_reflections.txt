Q: What happens when you initialize a repository? Why do you need to do it?
A: git creates a hidden directory in the directory that you are initializing as the repository and sets up the files necessary to begin using version control on files within this directory

Q: How is the staging area different from the working directory and the reposity? What value do you think it offers?
A: The staging area is the location that files that have been modified are kept before they are commited to the repository, which stores all committed versions, whereas the working directory just stores the files in the state they were last saved in. This is useful as it allows changes to be made to files without changing commiting new versions of the files for every change.

Q: How can you use the staging area to make sure you have one commit per logical change?
A: The staging area allows you to commit a group of files with changes in them at a time. This means that even if multiple logical changes have been made to the files in the working directory since the previous commit, these changes can be commmited separately.

Q: What are some situations when branches would be helpful in keeping your history organized? How would branches help?
A: If you need to make changes to some source code but want to maintain an unchanged version, such as when adding an experimental feature or want to keep a stable version available, you would make use of branches. Branches allow different series of commits to reflect different overall goals and integrate changes at a later point.
